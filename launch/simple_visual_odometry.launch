<launch>

    <!-- vehicle name e.g. cc2017_car -->
    <arg name="vehicle" default="cc2017_car"/>

    <!-- topic names -->
    <arg name="image_topic" default="/camera/image_raw"/>
    <arg name="homo_topic" default="/camera/camera_homography"/>
    <arg name="odometry_topic" default="/odometry" />
    <arg name="cam_info_topic" default=""/> <!-- if empty: it will be assumed that the image is already rectified and no undistortion is being done -->

    <!-- tf parent frame of published tf -->
    <arg name="static_frame" default="odom"/>

    <!-- tf child frame of published tf -->
    <arg name="moving_frame" default="rear_axis_middle_ground"/>

    <!-- vehicle configuration file it should be named: <vehicle>.yaml -->
    <arg name="vehicle_config" default="$(find drive_ros_localize_visual_odometry)/config/$(arg vehicle).yaml" />


    <arg name="minFeatureCount" default="8" />

    <arg name="fastThreshold" default="50" />


    <!-- draws a debug window with some infos -->
    <arg name="draw_debug" default="true" />



    <node name="simple_visual_odometry" pkg="drive_ros_localize_visual_odometry"
          type="simple_visual_odometry" respawn="false" output="screen">
        <remap from="~/img_in" to="$(arg image_topic)"/>
        <remap from="~/homog" to="$(arg homo_topic)"/>
        <remap from="~/odom_out" to="$(arg odometry_topic)" />
        <param name="cam_info_topic" type="str" value="$(arg cam_info_topic)"/> <!-- handle as parameter because could be empty -->
        <param name="static_frame" type="str" value="$(arg static_frame)" />
        <param name="moving_frame" type="str" value="$(arg moving_frame)" />
        <param name="draw_debug" type="bool" value="$(arg draw_debug)" />
        <param name="fastThreshold" type="int" value="$(arg fastThreshold)" />
        <param name="minFeatureCount" type="int" value="$(arg minFeatureCount)" />
        <rosparam command="load" file="$(arg vehicle_config)"/>
    </node>
</launch>
